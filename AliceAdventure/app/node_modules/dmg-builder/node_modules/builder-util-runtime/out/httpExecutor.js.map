{"version":3,"file":"httpExecutor.js","sourceRoot":"","sources":["../src/httpExecutor.ts"],"names":[],"mappings":"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","sourcesContent":["import { createHash, Hash } from \"crypto\"\nimport _debug from \"debug\"\nimport { createWriteStream } from \"fs-extra-p\"\nimport { IncomingMessage, OutgoingHttpHeaders, RequestOptions } from \"http\"\nimport { Socket } from \"net\"\nimport { Transform } from \"stream\"\nimport { parse as parseUrl, URL } from \"url\"\nimport { CancellationToken } from \"./CancellationToken\"\nimport { newError } from \"./index\"\nimport { ProgressCallbackTransform, ProgressInfo } from \"./ProgressCallbackTransform\"\n\nconst debug = _debug(\"electron-builder\")\n\nexport interface RequestHeaders extends OutgoingHttpHeaders {\n  [key: string]: string\n}\n\nexport interface DownloadOptions {\n  readonly headers?: OutgoingHttpHeaders | null\n  readonly skipDirCreation?: boolean\n  readonly sha2?: string | null\n  readonly sha512?: string | null\n\n  readonly cancellationToken: CancellationToken\n\n  // noinspection JSUnusedLocalSymbols\n  onProgress?(progress: ProgressInfo): void\n}\n\nexport function createHttpError(response: IncomingMessage, description: any | null = null) {\n  return new HttpError(response.statusCode || -1, `${response.statusCode} ${response.statusMessage}` + (description == null ? \"\" : (\"\\n\" + JSON.stringify(description, null, \"  \"))) + \"\\nHeaders: \" + safeStringifyJson(response.headers), description)\n}\n\nconst HTTP_STATUS_CODES = new Map<number, string>([\n  [429, \"Too many requests\"],\n  [400, \"Bad request\"],\n  [403, \"Forbidden\"],\n  [404, \"Not found\"],\n  [405, \"Method not allowed\"],\n  [406, \"Not acceptable\"],\n  [408, \"Request timeout\"],\n  [413, \"Request entity too large\"],\n  [500, \"Internal server error\"],\n  [502, \"Bad gateway\"],\n  [503, \"Service unavailable\"],\n  [504, \"Gateway timeout\"],\n  [505, \"HTTP version not supported\"],\n])\n\nexport class HttpError extends Error {\n  constructor(readonly statusCode: number, message: string = `HTTP error: ${HTTP_STATUS_CODES.get(statusCode) || statusCode}`, readonly description: any | null = null) {\n    super(message)\n\n    this.name = \"HttpError\"\n  }\n}\n\nexport function parseJson(result: Promise<string | null>) {\n  return result.then(it => it == null || it.length === 0 ? null : JSON.parse(it))\n}\n\nexport abstract class HttpExecutor<REQUEST> {\n  protected readonly maxRedirects = 10\n\n  request(options: RequestOptions, cancellationToken: CancellationToken = new CancellationToken(), data?: { [name: string]: any; } | null): Promise<string | null> {\n    configureRequestOptions(options)\n    const encodedData = data == null ? undefined : Buffer.from(JSON.stringify(data))\n    if (encodedData != null) {\n      options.method = \"post\"\n      options.headers![\"Content-Type\"] = \"application/json\"\n      options.headers![\"Content-Length\"] = encodedData.length\n    }\n    return this.doApiRequest(options, cancellationToken, it => (it as any).end(encodedData))\n  }\n\n  doApiRequest(options: RequestOptions, cancellationToken: CancellationToken, requestProcessor: (request: REQUEST, reject: (error: Error) => void) => void, redirectCount: number = 0): Promise<string> {\n    if (debug.enabled) {\n      debug(`Request: ${safeStringifyJson(options)}`)\n    }\n\n    return cancellationToken.createPromise<string>((resolve, reject, onCancel) => {\n      const request = this.doRequest(options, (response: any) => {\n        try {\n          this.handleResponse(response, options, cancellationToken, resolve, reject, redirectCount, requestProcessor)\n        }\n        catch (e) {\n          reject(e)\n        }\n      })\n      this.addErrorAndTimeoutHandlers(request, reject)\n      this.addRedirectHandlers(request, options, reject, redirectCount, options => {\n        this.doApiRequest(options, cancellationToken, requestProcessor, redirectCount)\n          .then(resolve)\n          .catch(reject)\n      })\n      requestProcessor(request, reject)\n      onCancel(() => request.abort())\n    })\n  }\n\n  // noinspection JSUnusedLocalSymbols\n  protected addRedirectHandlers(request: any, options: RequestOptions, reject: (error: Error) => void, redirectCount: number, handler: (options: RequestOptions) => void) {\n    // not required for NodeJS\n  }\n\n  addErrorAndTimeoutHandlers(request: any, reject: (error: Error) => void) {\n    this.addTimeOutHandler(request, reject)\n    request.on(\"error\", reject)\n    request.on(\"aborted\", () => {\n      reject(new Error(\"Request has been aborted by the server\"))\n    })\n  }\n\n  protected handleResponse(response: IncomingMessage, options: RequestOptions, cancellationToken: CancellationToken, resolve: (data?: any) => void, reject: (error: Error) => void, redirectCount: number, requestProcessor: (request: REQUEST, reject: (error: Error) => void) => void) {\n    if (debug.enabled) {\n      debug(`Response: ${response.statusCode} ${response.statusMessage}, request options: ${safeStringifyJson(options)}`)\n    }\n\n    // we handle any other >= 400 error on request end (read detailed message in the response body)\n    if (response.statusCode === 404) {\n      // error is clear, we don't need to read detailed error description\n      reject(createHttpError(response, `method: ${options.method} url: ${options.protocol || \"https:\"}//${options.hostname}${options.path}\n\nPlease double check that your authentication token is correct. Due to security reasons actual status maybe not reported, but 404.\n`))\n      return\n    }\n    else if (response.statusCode === 204) {\n      // on DELETE request\n      resolve()\n      return\n    }\n\n    const redirectUrl = safeGetHeader(response, \"location\")\n    if (redirectUrl != null) {\n      if (redirectCount > 10) {\n        reject(new Error(\"Too many redirects (> 10)\"))\n        return\n      }\n\n      this.doApiRequest(HttpExecutor.prepareRedirectUrlOptions(redirectUrl, options), cancellationToken, requestProcessor, redirectCount)\n        .then(resolve)\n        .catch(reject)\n      return\n    }\n\n    let data = \"\"\n    response.setEncoding(\"utf8\")\n    response.on(\"data\", (chunk: string) => data += chunk)\n\n    response.on(\"end\", () => {\n      try {\n        if (response.statusCode != null && response.statusCode >= 400) {\n          const contentType = safeGetHeader(response, \"content-type\")\n          const isJson = contentType != null && (Array.isArray(contentType) ? contentType.find(it => it.includes(\"json\")) != null : contentType.includes(\"json\"))\n          reject(createHttpError(response, isJson ? JSON.parse(data) : data))\n        }\n        else {\n          resolve(data.length === 0 ? null : data)\n        }\n      }\n      catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  // noinspection JSUnusedLocalSymbols\n  abstract doRequest(options: any, callback: (response: any) => void): any\n\n  protected doDownload(requestOptions: any, destination: string, redirectCount: number, options: DownloadOptions, callback: (error: Error | null) => void, onCancel: (callback: () => void) => void) {\n    const request = this.doRequest(requestOptions, (response: IncomingMessage) => {\n      if (response.statusCode! >= 400) {\n        callback(new Error(`Cannot download \"${requestOptions.protocol || \"https:\"}//${requestOptions.hostname}${requestOptions.path}\", status ${response.statusCode}: ${response.statusMessage}`))\n        return\n      }\n\n      const redirectUrl = safeGetHeader(response, \"location\")\n      if (redirectUrl != null) {\n        if (redirectCount < this.maxRedirects) {\n          this.doDownload(HttpExecutor.prepareRedirectUrlOptions(redirectUrl, requestOptions), destination, redirectCount++, options, callback, onCancel)\n        }\n        else {\n          callback(new Error(`Too many redirects (> ${this.maxRedirects})`))\n        }\n        return\n      }\n\n      configurePipes(options, response, destination, callback, options.cancellationToken)\n    })\n    this.addErrorAndTimeoutHandlers(request, callback)\n    this.addRedirectHandlers(request, requestOptions, callback, redirectCount, requestOptions => {\n      this.doDownload(requestOptions, destination, redirectCount++, options, callback, onCancel)\n    })\n    onCancel(() => request.abort())\n    request.end()\n  }\n\n  protected addTimeOutHandler(request: any, callback: (error: Error) => void) {\n    request.on(\"socket\", (socket: Socket) => {\n      socket.setTimeout(60 * 1000, () => {\n        callback(new Error(\"Request timed out\"))\n        request.abort()\n      })\n    })\n  }\n\n  static prepareRedirectUrlOptions(redirectUrl: string, options: RequestOptions): RequestOptions {\n    const newOptions = configureRequestOptionsFromUrl(redirectUrl, {...options})\n    if (newOptions.headers != null && newOptions.headers.Authorization != null && (newOptions.headers!!.Authorization as string).startsWith(\"token\")) {\n      const parsedNewUrl = new URL(redirectUrl)\n      if (parsedNewUrl.hostname.endsWith(\".amazonaws.com\")) {\n        delete newOptions.headers.Authorization\n      }\n    }\n    return newOptions\n  }\n}\n\nexport function configureRequestOptionsFromUrl(url: string, options: RequestOptions) {\n  const parsedUrl = parseUrl(url)\n  options.protocol = parsedUrl.protocol\n  options.hostname = parsedUrl.hostname\n  if (parsedUrl.port == null) {\n    if (options.port != null) {\n      delete options.port\n    }\n  }\n  else {\n    options.port = parsedUrl.port\n  }\n  options.path = parsedUrl.path\n  return configureRequestOptions(options)\n}\n\nexport class DigestTransform extends Transform {\n  private readonly digester: Hash\n\n  private _actual: string | null = null\n\n  // noinspection JSUnusedGlobalSymbols\n  get actual() {\n    return this._actual\n  }\n\n  isValidateOnEnd: boolean = true\n\n  constructor(readonly expected: string, private readonly algorithm: string = \"sha512\", private readonly encoding: \"hex\" | \"base64\" | \"latin1\" = \"base64\") {\n    super()\n\n    this.digester = createHash(algorithm)\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  _transform(chunk: Buffer, encoding: string, callback: any) {\n    this.digester.update(chunk)\n    callback(null, chunk)\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  _flush(callback: any): void {\n    this._actual = this.digester.digest(this.encoding)\n\n    if (this.isValidateOnEnd) {\n      try {\n        this.validate()\n      }\n      catch (e) {\n        callback(e)\n        return\n      }\n    }\n\n    callback(null)\n  }\n\n  validate() {\n    if (this._actual == null) {\n      throw newError(\"Not finished yet\", \"ERR_STREAM_NOT_FINISHED\")\n    }\n\n    if (this._actual !== this.expected) {\n      throw newError(`${this.algorithm} checksum mismatch, expected ${this.expected}, got ${this._actual}`, \"ERR_CHECKSUM_MISMATCH\")\n    }\n\n    return null\n  }\n}\n\nfunction checkSha2(sha2Header: string | null | undefined, sha2: string | null | undefined, callback: (error: Error | null) => void): boolean {\n  if (sha2Header != null && sha2 != null) {\n    // todo why bintray doesn't send this header always\n    if (sha2Header == null) {\n      callback(new Error(\"checksum is required, but server response doesn't contain X-Checksum-Sha2 header\"))\n      return false\n    }\n    else if (sha2Header !== sha2) {\n      callback(new Error(`checksum mismatch: expected ${sha2} but got ${sha2Header} (X-Checksum-Sha2 header)`))\n      return false\n    }\n  }\n  return true\n}\n\nexport function safeGetHeader(response: any, headerKey: string) {\n  const value = response.headers[headerKey]\n  if (value == null) {\n    return null\n  }\n  else if (Array.isArray(value)) {\n    // electron API\n    return value.length === 0 ? null : value[value.length - 1]\n  }\n  else {\n    return value\n  }\n}\n\nfunction configurePipes(options: DownloadOptions, response: any, destination: string, callback: (error: Error | null) => void, cancellationToken: CancellationToken) {\n  if (!checkSha2(safeGetHeader(response, \"X-Checksum-Sha2\"), options.sha2, callback)) {\n    return\n  }\n\n  const streams: Array<any> = []\n  if (options.onProgress != null) {\n    const contentLength = safeGetHeader(response, \"content-length\")\n    if (contentLength != null) {\n      streams.push(new ProgressCallbackTransform(parseInt(contentLength, 10), options.cancellationToken, options.onProgress))\n    }\n  }\n\n  const sha512 = options.sha512\n  if (sha512 != null) {\n    streams.push(new DigestTransform(sha512, \"sha512\", sha512.length === 128 && !sha512.includes(\"+\") && !sha512.includes(\"Z\") && !sha512.includes(\"=\") ? \"hex\" : \"base64\"))\n  }\n  else if (options.sha2 != null) {\n    streams.push(new DigestTransform(options.sha2, \"sha256\", \"hex\"))\n  }\n\n  const fileOut = createWriteStream(destination)\n  streams.push(fileOut)\n\n  let lastStream = response\n  for (const stream of streams) {\n    stream.on(\"error\", (error: Error) => {\n      if (!cancellationToken.cancelled) {\n        callback(error)\n      }\n    })\n    lastStream = lastStream.pipe(stream)\n  }\n\n  fileOut.on(\"finish\", () => {\n    (fileOut.close as any)(callback)\n  })\n}\n\nexport function configureRequestOptions(options: RequestOptions, token?: string | null, method?: \"GET\" | \"DELETE\" | \"PUT\"): RequestOptions {\n  if (method != null) {\n    options.method = method\n  }\n\n  let headers = options.headers\n  if (headers == null) {\n    headers = {}\n    options.headers = headers\n  }\n  if (token != null) {\n    (headers as any).authorization = token.startsWith(\"Basic\") ? token : `token ${token}`\n  }\n  if (headers[\"User-Agent\"] == null) {\n    headers[\"User-Agent\"] = \"electron-builder\"\n  }\n\n  if ((method == null || method === \"GET\") || headers[\"Cache-Control\"] == null) {\n    headers[\"Cache-Control\"] = \"no-cache\"\n  }\n\n  // do not specify for node (in any case we use https module)\n  if (options.protocol == null && (process.versions as any).electron != null) {\n    options.protocol = \"https:\"\n  }\n  return options\n}\n\nexport function safeStringifyJson(data: any, skippedNames?: Set<string>) {\n  return JSON.stringify(data, (name, value) => {\n    if (name.endsWith(\"authorization\") || name.endsWith(\"Password\") || name.endsWith(\"PASSWORD\") || name.endsWith(\"Token\") || name.includes(\"password\") || name.includes(\"token\") || (skippedNames != null && skippedNames.has(name))) {\n      return \"<stripped sensitive data>\"\n    }\n    return value\n  }, 2)\n}"]}
