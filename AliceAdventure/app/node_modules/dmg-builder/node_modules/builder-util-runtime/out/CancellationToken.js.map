{"version":3,"file":"CancellationToken.js","sourceRoot":"","sources":["../src/CancellationToken.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { EventEmitter } from \"events\"\n\nexport class CancellationToken extends EventEmitter {\n  private parentCancelHandler: (() => any) | null = null\n\n  private _cancelled: boolean\n  get cancelled(): boolean {\n    return this._cancelled || (this._parent != null && this._parent.cancelled)\n  }\n\n  private _parent: CancellationToken | null = null\n  set parent(value: CancellationToken) {\n    this.removeParentCancelHandler()\n\n    this._parent = value\n    this.parentCancelHandler = () => this.cancel()\n    this._parent.onCancel(this.parentCancelHandler)\n  }\n\n  // babel cannot compile ... correctly for super calls\n  constructor(parent?: CancellationToken) {\n    super()\n\n    this._cancelled = false\n    if (parent != null) {\n      this.parent = parent\n    }\n  }\n\n  cancel() {\n    this._cancelled = true\n    this.emit(\"cancel\")\n  }\n\n  private onCancel(handler: () => any) {\n    if (this.cancelled) {\n      handler()\n    }\n    else {\n      this.once(\"cancel\", handler)\n    }\n  }\n\n  createPromise<R>(callback: (resolve: (thenableOrResult?: R) => void, reject: (error: Error) => void, onCancel: (callback: () => void) => void) => void): Promise<R> {\n    if (this.cancelled) {\n      return BluebirdPromise.reject<R>(new CancellationError())\n    }\n\n    let cancelHandler: (() => void) | null = null\n    return new BluebirdPromise<R>((resolve, reject) => {\n      let addedCancelHandler: (() => void) | null = null\n\n      cancelHandler = () => {\n        try {\n          if (addedCancelHandler != null) {\n            addedCancelHandler()\n            addedCancelHandler = null\n          }\n        }\n        finally {\n          reject(new CancellationError())\n        }\n      }\n\n      if (this.cancelled) {\n        cancelHandler()\n        return\n      }\n\n      this.onCancel(cancelHandler)\n\n      callback(resolve, reject, (callback: () => void) => {\n        addedCancelHandler = callback\n      })\n    })\n      .finally(() => {\n        if (cancelHandler != null) {\n          this.removeListener(\"cancel\", cancelHandler)\n          cancelHandler = null\n        }\n      })\n  }\n\n  private removeParentCancelHandler() {\n    const parent = this._parent\n    if (parent != null && this.parentCancelHandler != null) {\n      parent.removeListener(\"cancel\", this.parentCancelHandler)\n      this.parentCancelHandler = null\n    }\n  }\n\n  dispose() {\n    try {\n      this.removeParentCancelHandler()\n    }\n    finally {\n      this.removeAllListeners()\n      this._parent = null\n    }\n  }\n}\n\nexport class CancellationError extends Error {\n  constructor() {\n    super(\"Cancelled\")\n  }\n}"]}
