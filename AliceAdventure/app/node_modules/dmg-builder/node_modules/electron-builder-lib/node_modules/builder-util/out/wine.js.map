{"version":3,"file":"wine.js","sourceRoot":"","sources":["../src/wine.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7za } from \"7zip-bin\"\nimport { ExecFileOptions } from \"child_process\"\nimport { Lazy } from \"lazy-val\"\nimport * as os from \"os\"\nimport * as path from \"path\"\nimport * as semver from \"semver\"\nimport { getBinFromGithub } from \"./binDownload\"\nimport { computeEnv, EXEC_TIMEOUT, ToolInfo } from \"./bundledTool\"\nimport { getMacOsVersion } from \"./macosVersion\"\nimport { debug7zArgs, exec, isEnvTrue, log } from \"./util\"\n\nconst wineExecutable = new Lazy<ToolInfo>(async () => {\n  const isUseSystemWine = isEnvTrue(process.env.USE_SYSTEM_WINE)\n  if (isUseSystemWine) {\n    log.debug(null, \"using system wine is forced\")\n  }\n  else if (process.platform === \"darwin\") {\n    // assume that on travis latest version is used\n    const osVersion = await getMacOsVersion()\n    let version: string | null = null\n    let checksum: string | null = null\n    if (semver.gte(osVersion, \"10.13.0\")) {\n      version = \"2.0.3-mac-10.13\"\n      // noinspection SpellCheckingInspection\n      checksum = \"dlEVCf0YKP5IEiOKPNE48Q8NKXbXVdhuaI9hG2oyDEay2c+93PE5qls7XUbIYq4Xi1gRK8fkWeCtzN2oLpVQtg==\"\n    }\n    else if (semver.gte(osVersion, \"10.12.0\") || process.env.TRAVIS_OS_NAME === \"osx\") {\n      version = \"2.0.1-mac-10.12\"\n      // noinspection SpellCheckingInspection\n      checksum = \"IvKwDml/Ob0vKfYVxcu92wxUzHu8lTQSjjb8OlCTQ6bdNpVkqw17OM14TPpzGMIgSxfVIrQZhZdCwpkxLyG3mg==\"\n    }\n\n    if (version != null) {\n      const wineDir = await getBinFromGithub(\"wine\", version, checksum!!)\n      return {\n        path: path.join(wineDir, \"bin/wine\"),\n        env: {\n          ...process.env,\n          WINEDEBUG: \"-all,err+all\",\n          WINEDLLOVERRIDES: \"winemenubuilder.exe=d\",\n          WINEPREFIX: path.join(wineDir, \"wine-home\"),\n          DYLD_FALLBACK_LIBRARY_PATH: computeEnv(process.env.DYLD_FALLBACK_LIBRARY_PATH, [path.join(wineDir, \"lib\")]),\n        },\n      }\n    }\n  }\n\n  if (process.env.COMPRESSED_WINE_HOME) {\n    await exec(path7za, debug7zArgs(\"x\").concat(process.env.COMPRESSED_WINE_HOME!!, \"-aoa\", `-o${path.join(os.homedir(), \".wine\")}`))\n  }\n  else {\n    await checkWineVersion(exec(\"wine\", [\"--version\"]))\n  }\n  return {path: \"wine\"}\n})\n\n/** @private */\nexport function execWine(file: string, args: Array<string>, options: ExecFileOptions = EXEC_TIMEOUT): Promise<string> {\n  if (process.platform === \"win32\") {\n    return exec(file, args, options)\n  }\n  else {\n    return wineExecutable.value\n      .then(wine => {\n        const effectiveOptions = wine.env == null ? options : {...options}\n        if (wine.env != null) {\n          effectiveOptions.env = options.env == null ? wine.env : {\n            ...options.env,\n            ...wine.env,\n          }\n        }\n        return exec(wine.path, [file].concat(args), effectiveOptions)\n      })\n  }\n}\n\n/** @private */\nexport function prepareWindowsExecutableArgs(args: Array<string>, exePath: string) {\n  if (process.platform !== \"win32\") {\n    args.unshift(exePath)\n  }\n  return args\n}\n\n/** @private */\nexport async function checkWineVersion(checkPromise: Promise<string>) {\n  function wineError(prefix: string): string {\n    return `${prefix}, please see https://electron.build/multi-platform-build#${(process.platform === \"linux\" ? \"linux\" : \"macos\")}`\n  }\n\n  let wineVersion: string\n  try {\n    wineVersion = (await checkPromise).trim()\n  }\n  catch (e) {\n    if (e.code === \"ENOENT\") {\n      throw new Error(wineError(\"wine is required\"))\n    }\n    else {\n      throw new Error(`Cannot check wine version: ${e}`)\n    }\n  }\n\n  if (wineVersion.startsWith(\"wine-\")) {\n    wineVersion = wineVersion.substring(\"wine-\".length)\n  }\n\n  const spaceIndex = wineVersion.indexOf(\" \")\n  if (spaceIndex > 0) {\n    wineVersion = wineVersion.substring(0, spaceIndex)\n  }\n\n  const suffixIndex = wineVersion.indexOf(\"-\")\n  if (suffixIndex > 0) {\n    wineVersion = wineVersion.substring(0, suffixIndex)\n  }\n\n  if (wineVersion.split(\".\").length === 2) {\n    wineVersion += \".0\"\n  }\n\n  if (semver.lt(wineVersion, \"1.8.0\")) {\n    throw new Error(wineError(`wine 1.8+ is required, but your version is ${wineVersion}`))\n  }\n}"]}
