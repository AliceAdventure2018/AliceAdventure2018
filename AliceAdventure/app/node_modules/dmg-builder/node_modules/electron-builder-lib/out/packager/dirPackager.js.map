{"version":3,"file":"dirPackager.js","sourceRoot":"","sources":["../../src/packager/dirPackager.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7za } from \"7zip-bin\"\nimport BluebirdPromise from \"bluebird-lst\"\nimport { debug7zArgs, exec, isEnvTrue, log, spawn } from \"builder-util\"\nimport { copyDir, DO_NOT_USE_HARD_LINKS, statOrNull } from \"builder-util/out/fs\"\nimport { chmod, emptyDir } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { Configuration, ElectronDownloadOptions } from \"../configuration\"\nimport { PlatformPackager } from \"../platformPackager\"\n\ninterface InternalElectronDownloadOptions extends ElectronDownloadOptions {\n  version: string\n  platform: string\n  arch: string\n}\n\nfunction createDownloadOpts(opts: Configuration, platform: string, arch: string, electronVersion: string): InternalElectronDownloadOptions {\n  return {\n    platform,\n    arch,\n    version: electronVersion,\n    ...opts.electronDownload,\n  }\n}\n\n/** @internal */\nexport function unpackElectron(packager: PlatformPackager<any>, out: string, platform: string, arch: string, version: string) {\n  return unpack(packager, out, platform, createDownloadOpts(packager.config, platform, arch, version))\n}\n\n/** @internal */\nexport function unpackMuon(packager: PlatformPackager<any>, out: string, platform: string, arch: string, version: string) {\n  return unpack(packager, out, platform, {\n    mirror: \"https://github.com/brave/muon/releases/download/v\",\n    customFilename: `brave-v${version}-${platform}-${arch}.zip`,\n    verifyChecksum: false,\n    ...createDownloadOpts(packager.config, platform, arch, version),\n  })\n}\n\nasync function unpack(packager: PlatformPackager<any>, out: string, platform: string, options: InternalElectronDownloadOptions) {\n  let dist: string | null | undefined = packager.config.electronDist\n  if (dist != null) {\n    const zipFile = `electron-v${options.version}-${platform}-${options.arch}.zip`\n    const resolvedDist = path.resolve(packager.projectDir, dist)\n    if ((await statOrNull(path.join(resolvedDist, zipFile))) != null) {\n      options.cache = resolvedDist\n      dist = null\n    }\n  }\n\n  if (dist == null) {\n    const zipPath = (await BluebirdPromise.all<any>([\n      packager.info.electronDownloader(options),\n      emptyDir(out)\n    ]))[0]\n\n    if (process.platform === \"darwin\" || isEnvTrue(process.env.USE_UNZIP)) {\n      // on mac unzip faster than 7za (1.1 sec vs 1.6 see)\n      await exec(\"unzip\", [\"-oqq\", \"-d\", out, zipPath])\n    }\n    else {\n      await spawn(path7za, debug7zArgs(\"x\").concat(zipPath, \"-aoa\", `-o${out}`))\n      if (platform === \"linux\") {\n        // https://github.com/electron-userland/electron-builder/issues/786\n        // fix dir permissions â€” opposite to extract-zip, 7za creates dir with no-access for other users, but dir must be readable for non-root users\n        await BluebirdPromise.all([\n          chmod(path.join(out, \"locales\"), \"0755\"),\n          chmod(path.join(out, \"resources\"), \"0755\")\n        ])\n      }\n    }\n  }\n  else {\n    const source = packager.getElectronSrcDir(dist)\n    const destination = packager.getElectronDestinationDir(out)\n    log.info({source, destination}, \"copying Electron\")\n    await emptyDir(out)\n    await copyDir(source, destination, {\n      isUseHardLink: DO_NOT_USE_HARD_LINKS,\n    })\n  }\n}"]}
