{"version":3,"file":"fpm.js","sourceRoot":"","sources":["../../src/targets/fpm.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7za } from \"7zip-bin\"\nimport { appBuilderPath } from \"app-builder-bin\"\nimport BluebirdPromise from \"bluebird-lst\"\nimport { Arch, debug, exec, isMacOsSierra, log, smarten, TmpDir, toLinuxArchString, use } from \"builder-util\"\nimport { computeEnv } from \"builder-util/out/bundledTool\"\nimport { unlinkIfExists } from \"builder-util/out/fs\"\nimport { ensureDir, outputFile, readFile } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { DebOptions, LinuxTargetSpecificOptions } from \"..\"\nimport { Target } from \"../core\"\nimport * as errorMessages from \"../errorMessages\"\nimport { LinuxPackager } from \"../linuxPackager\"\nimport { getTemplatePath } from \"../util/pathManager\"\nimport { installPrefix, LinuxTargetHelper } from \"./LinuxTargetHelper\"\nimport { fpmPath, getLinuxToolsPath } from \"./tools\"\n\ninterface FpmOptions {\n  maintainer: string | undefined\n  vendor: string\n  url: string\n}\n\nexport default class FpmTarget extends Target {\n  readonly options: LinuxTargetSpecificOptions = {...this.packager.platformSpecificBuildOptions, ...(this.packager.config as any)[this.name]}\n\n  private readonly scriptFiles: Promise<Array<string>>\n\n  constructor(name: string, private readonly packager: LinuxPackager, private readonly helper: LinuxTargetHelper, readonly outDir: string) {\n    super(name, false)\n\n    this.scriptFiles = this.createScripts()\n  }\n\n  private async createScripts(): Promise<Array<string>> {\n    const defaultTemplatesDir = getTemplatePath(\"linux\")\n\n    const packager = this.packager\n    const templateOptions = {\n      // old API compatibility\n      executable: packager.executableName,\n      productFilename: packager.appInfo.productFilename, ...packager.platformSpecificBuildOptions}\n\n    function getResource(value: string | null | undefined, defaultFile: string) {\n      if (value == null) {\n        return path.join(defaultTemplatesDir, defaultFile)\n      }\n      return path.resolve(packager.projectDir, value)\n    }\n\n    return await BluebirdPromise.all<string>([\n      writeConfigFile(packager.info.tempDirManager, getResource(this.options.afterInstall, \"after-install.tpl\"), templateOptions),\n      writeConfigFile(packager.info.tempDirManager, getResource(this.options.afterRemove, \"after-remove.tpl\"), templateOptions)\n    ])\n  }\n\n  checkOptions(): Promise<any> {\n    return this.computeFpmMetaInfoOptions()\n  }\n\n  private async computeFpmMetaInfoOptions(): Promise<FpmOptions> {\n    const packager = this.packager\n    const projectUrl = await packager.appInfo.computePackageUrl()\n    const errors: Array<string> = []\n    if (projectUrl == null) {\n      errors.push(\"Please specify project homepage, see https://electron.build/configuration/configuration#Metadata-homepage\")\n    }\n\n    const options = this.options\n    let author = options.maintainer\n    if (author == null) {\n      const a = packager.info.metadata.author\n      if (a == null || a.email == null) {\n        errors.push(errorMessages.authorEmailIsMissed)\n      }\n      else {\n        author = `${a.name} <${a.email}>`\n      }\n    }\n\n    if (errors.length > 0) {\n      throw new Error(errors.join(\"\\n\\n\"))\n    }\n\n    return {\n      maintainer: author!!,\n      url: projectUrl!!,\n      vendor: options.vendor || author!!,\n    }\n  }\n\n  async build(appOutDir: string, arch: Arch): Promise<any> {\n    const fpmMetaInfoOptions = await this.computeFpmMetaInfoOptions()\n\n    const target = this.name\n\n    // tslint:disable:no-invalid-template-strings\n    let nameFormat = \"${name}-${version}-${arch}.${ext}\"\n    let isUseArchIfX64 = false\n    if (target === \"deb\") {\n      nameFormat = \"${name}_${version}_${arch}.${ext}\"\n      isUseArchIfX64 = true\n    }\n    else if (target === \"rpm\") {\n      nameFormat = \"${name}-${version}.${arch}.${ext}\"\n      isUseArchIfX64 = true\n    }\n\n    const artifactPath = path.join(this.outDir, this.packager.expandArtifactNamePattern(this.options, target, arch, nameFormat, !isUseArchIfX64))\n\n    this.logBuilding(target, artifactPath, arch)\n\n    await unlinkIfExists(artifactPath)\n    if (this.packager.packagerOptions.prepackaged != null) {\n      await ensureDir(this.outDir)\n    }\n\n    const scripts = await this.scriptFiles\n    const packager = this.packager\n    const appInfo = packager.appInfo\n    const options = this.options\n    const synopsis = options.synopsis\n    const args = [\n      \"-s\", \"dir\",\n      \"-t\", target,\n      \"--architecture\", (target === \"pacman\" && arch === Arch.ia32) ? \"i686\" : toLinuxArchString(arch),\n      \"--name\", appInfo.name,\n      \"--force\",\n      \"--after-install\", scripts[0],\n      \"--after-remove\", scripts[1],\n      \"--description\", smarten(target === \"rpm\" ? this.helper.getDescription(options)! : `${synopsis || \"\"}\\n ${this.helper.getDescription(options)}`),\n      \"--version\", appInfo.version,\n      \"--package\", artifactPath,\n    ]\n\n    for (const key of Object.keys(fpmMetaInfoOptions)) {\n      const value = (fpmMetaInfoOptions as any)[key]\n      if (value != null) {\n        args.push(`--${key}`, value)\n      }\n    }\n\n    if (debug.enabled) {\n      args.push(\n        \"--log\", \"debug\",\n        \"--debug\")\n    }\n\n    const packageCategory = options.packageCategory\n    if (packageCategory != null && packageCategory !== null) {\n      args.push(\"--category\", packageCategory)\n    }\n\n    const compression = options.compression\n    if (target === \"deb\") {\n      args.push(\"--deb-compression\", compression || \"xz\")\n      use((options as DebOptions).priority, it => args.push(\"--deb-priority\", it!))\n    }\n    else if (target === \"rpm\") {\n      args.push(\"--rpm-compression\", (compression === \"xz\" ? \"xzmt\" : compression) || \"xzmt\")\n      args.push(\"--rpm-os\", \"linux\")\n\n      if (synopsis != null) {\n        args.push(\"--rpm-summary\", smarten(synopsis))\n      }\n    }\n\n    // noinspection JSDeprecatedSymbols\n    let depends = options.depends || this.packager.platformSpecificBuildOptions.depends\n    if (depends == null) {\n      if (target === \"deb\") {\n        depends = [\"gconf2\", \"gconf-service\", \"libnotify4\", \"libappindicator1\", \"libxtst6\", \"libnss3\", \"libxss1\"]\n      }\n      else if (target === \"pacman\") {\n        // noinspection SpellCheckingInspection\n        depends = [\"c-ares\", \"ffmpeg\", \"gtk3\", \"http-parser\", \"libevent\", \"libvpx\", \"libxslt\", \"libxss\", \"minizip\", \"nss\", \"re2\", \"snappy\", \"libnotify\", \"libappindicator-gtk2\", \"libappindicator-gtk3\", \"libappindicator-sharp\"]\n      }\n      else if (target === \"rpm\") {\n        // noinspection SpellCheckingInspection\n        depends = [\"libnotify\", \"libappindicator\", \"libXScrnSaver\"]\n      }\n      else {\n        depends = []\n      }\n    }\n    else if (!Array.isArray(depends)) {\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof depends === \"string\") {\n        depends = [depends as string]\n      }\n      else {\n        throw new Error(`depends must be Array or String, but specified as: ${depends}`)\n      }\n    }\n\n    for (const dep of depends) {\n      args.push(\"--depends\", dep)\n    }\n\n    use(packager.info.metadata.license, it => args.push(\"--license\", it!))\n    use(appInfo.buildNumber, it => args.push(\"--iteration\", it!))\n\n    use(options.fpm, it => args.push(...it as any))\n\n    args.push(`${appOutDir}/=${installPrefix}/${appInfo.productFilename}`)\n    for (const icon of (await this.helper.icons)) {\n      args.push(`${icon.file}=/usr/share/icons/hicolor/${icon.size}x${icon.size}/apps/${packager.executableName}.png`)\n    }\n\n    const desktopFilePath = await this.helper.writeDesktopEntry(this.options)\n    args.push(`${desktopFilePath}=/usr/share/applications/${this.packager.executableName}.desktop`)\n\n    if (this.packager.packagerOptions.effectiveOptionComputed != null && await this.packager.packagerOptions.effectiveOptionComputed([args, desktopFilePath])) {\n      return\n    }\n\n    const env = {\n      ...process.env,\n      FPM_COMPRESS_PROGRAM: appBuilderPath,\n      SZA_PATH: path7za,\n      SZA_COMPRESSION_LEVEL: packager.compression === \"store\" ? \"0\" : \"9\",\n      SZA_ARCHIVE_TYPE: \"xz\",\n    }\n\n    // rpmbuild wants directory rpm with some default config files. Even if we can use dylibbundler, path to such config files are not changed (we need to replace in the binary)\n    // so, for now, brew install rpm is still required.\n    if (target !== \"rpm\" && await isMacOsSierra()) {\n      const linuxToolsPath = await getLinuxToolsPath()\n      Object.assign(env, {\n        PATH: computeEnv(process.env.PATH, [path.join(linuxToolsPath, \"bin\")]),\n        DYLD_LIBRARY_PATH: computeEnv(process.env.DYLD_LIBRARY_PATH, [path.join(linuxToolsPath, \"lib\")]),\n      })\n    }\n    await exec(await fpmPath.value, args, {env})\n\n    this.packager.dispatchArtifactCreated(artifactPath, this, arch)\n  }\n}\n\nasync function writeConfigFile(tmpDir: TmpDir, templatePath: string, options: any): Promise<string> {\n  //noinspection JSUnusedLocalSymbols\n  function replacer(match: string, p1: string) {\n    if (p1 in options) {\n      return options[p1]\n    }\n    else {\n      throw new Error(`Macro ${p1} is not defined`)\n    }\n  }\n  const config = (await readFile(templatePath, \"utf8\"))\n    .replace(/\\${([a-zA-Z]+)}/g, replacer)\n    .replace(/<%=([a-zA-Z]+)%>/g, (match, p1) => {\n      log.warn(\"<%= varName %> is deprecated, please use ${varName} instead\")\n      return replacer(match, p1.trim())\n    })\n\n  const outputPath = await tmpDir.getTempFile({suffix: path.basename(templatePath, \".tpl\")})\n  await outputFile(outputPath, config)\n  return outputPath\n}\n"]}
