{"version":3,"file":"packageDependencies.js","sourceRoot":"","sources":["../../src/util/packageDependencies.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { isEnvTrue, log } from \"builder-util\"\nimport { CONCURRENCY, statOrNull } from \"builder-util/out/fs\"\nimport { orNullIfFileNotExist } from \"builder-util/out/promise\"\nimport { lstat, readdir, readFile, realpath, Stats } from \"fs-extra-p\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\n\nexport interface Dependency {\n  name: string\n  version: string\n  path: string\n  extraneous: boolean\n  optional: boolean\n\n  dependencies: Map<string, Dependency> | null\n  directDependencyNames: Array<string> | null\n  peerDependencies: { [key: string]: any } | null\n  optionalDependencies: { [key: string]: any } | null\n\n  realName: string\n  link?: string\n\n  parent?: Dependency\n\n  // only if link\n  stat?: Stats\n}\n\nconst knownAlwaysIgnoredDevDeps = new Set([\n  \"electron-builder-tslint-config\", \"electron-download\",\n  \"electron-forge\", \"electron-packager\", \"electron-compilers\",\n  \"prebuild-install\", \"nan\",\n  \"electron-webpack\", \"electron-webpack-ts\", \"electron-webpack-vue\",\n  \"@types\",\n])\n\n// noinspection JSUnusedGlobalSymbols\nexport function createLazyProductionDeps(projectDir: string) {\n  return new Lazy(() => getProductionDependencies(projectDir))\n}\n\n/** @internal */\nexport async function getProductionDependencies(folder: string): Promise<Array<Dependency>> {\n  const result: Array<Dependency> = []\n  computeSortedPaths(await new Collector().collect(folder), result, false)\n  return result\n}\n\nconst ignoredProperties = new Set([\"description\", \"author\", \"bugs\", \"engines\", \"repository\", \"build\", \"main\", \"license\", \"homepage\", \"scripts\", \"maintainers\", \"contributors\", \"keywords\", \"devDependencies\", \"files\", \"typings\", \"types\", \"xo\", \"resolutions\"])\n\nfunction readJson(file: string) {\n  return readFile(file, \"utf-8\")\n    .then(it => JSON.parse(it, (key, value) => ignoredProperties.has(key) ? undefined : value))\n}\n\nfunction computeSortedPaths(parent: Dependency, result: Array<Dependency>, isExtraneous: boolean) {\n  const dependencies = parent.dependencies\n  if (dependencies == null) {\n    return\n  }\n\n  for (const dep of dependencies.values()) {\n    if (dep.extraneous === isExtraneous) {\n      result.push(dep)\n      computeSortedPaths(dep, result, isExtraneous)\n    }\n  }\n}\n\nclass Collector {\n  readonly pathToMetadata = new Map<string, Dependency>()\n  private unresolved = new Map<string, boolean>()\n\n  async collect(dir: string) {\n    const rootDependency: Dependency = await readJson(path.join(dir, \"package.json\"))\n    await this.readInstalled(path.join(dir, \"node_modules\"), rootDependency, rootDependency.name)\n    this.unmarkExtraneous(rootDependency)\n\n    if (this.unresolved.size > 0) {\n      log.debug({unresolved: Array.from(this.unresolved.keys()).join(\", \")}, \"unresolved dependencies after first round\")\n      await this.resolveUnresolvedHoisted(rootDependency, dir)\n    }\n    return rootDependency\n  }\n\n  private async resolveUnresolvedHoisted(rootDependency: Dependency, dir: string): Promise<void> {\n    let nameToMetadata = rootDependency.dependencies\n    if (nameToMetadata == null) {\n      rootDependency.dependencies = new Map<string, Dependency>()\n      nameToMetadata = rootDependency.dependencies\n    }\n\n    let parentDir = dir\n    do {\n      parentDir = path.dirname(parentDir)\n      if (parentDir === \"\" || parentDir.endsWith(\"/\") || parentDir.endsWith(\"\\\\\")) {\n        // https://github.com/electron-userland/electron-builder/issues/2220\n        const list = Array.from(this.unresolved.keys()).filter(it => !this.unresolved.get(it))\n        if (list.length !== 0) {\n          const message = `Unresolved node modules: ${list.join(\", \")}`\n          if (isEnvTrue(process.env.ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES)) {\n            log.warn(message)\n          }\n          else {\n            throw new Error(message)\n          }\n        }\n        break\n      }\n\n      const parentNodeModulesDir = parentDir + path.sep + \"node_modules\"\n      const dirStat = await statOrNull(parentNodeModulesDir)\n      if (dirStat == null || !dirStat.isDirectory()) {\n        if (dirStat == null || !dirStat.isDirectory()) {\n          continue\n        }\n      }\n\n      // https://github.com/electron-userland/electron-builder/issues/2222#issuecomment-339060335\n      // step 1: resolve current unresolved\n      // step n: try to resolve new unresolved in the same parent dir until at least something is resolved in the dir\n      while (true) {\n        const unresolved = Array.from(this.unresolved.keys())\n        this.unresolved.clear()\n\n        const resolved = await BluebirdPromise.map(unresolved, it => {\n          return this.readChildPackage(it, parentNodeModulesDir, rootDependency)\n            .catch(e => {\n              if ((e as any).code === \"ENOENT\") {\n                return null\n              }\n              else {\n                throw e\n              }\n            })\n        }, CONCURRENCY)\n\n        let hasResolved = false\n\n        for (const dep of resolved) {\n          if (dep != null) {\n            hasResolved = true\n            this.unmarkExtraneous(dep)\n            nameToMetadata.set(dep.realName, dep)\n          }\n        }\n\n        if (!hasResolved) {\n          break\n        }\n\n        this.unmarkExtraneous(rootDependency)\n\n        if (this.unresolved.size === 0) {\n          return\n        }\n      }\n    }\n    while (this.unresolved.size > 0)\n  }\n\n  private async readInstalled(nodeModulesDir: string, dependency: Dependency, name: string): Promise<void> {\n    dependency.realName = name\n    dependency.directDependencyNames = dependency.dependencies == null ? null : Object.keys(dependency.dependencies)\n\n    // mark as extraneous at this point.\n    // this will be un-marked in unmarkExtraneous, where we mark as not-extraneous everything that is required in some way from the root object.\n    dependency.extraneous = true\n    dependency.optional = true\n\n    if (dependency.dependencies == null && dependency.optionalDependencies == null) {\n      // package has only dev or peer dependencies - no need to check child node_module\n      dependency.dependencies = null\n      return\n    }\n\n    const childModules = await readNodeModulesDir(nodeModulesDir)\n    if (childModules == null) {\n      dependency.dependencies = null\n      return\n    }\n\n    const deps = await BluebirdPromise.map(childModules, it => this.readChildPackage(it, nodeModulesDir, dependency), CONCURRENCY)\n    if (deps.length === 0) {\n      dependency.dependencies = null\n      return\n    }\n\n    const nameToMetadata = new Map<string, Dependency>()\n    for (const dep of deps) {\n      if (dep != null) {\n        nameToMetadata.set(dep.realName, dep)\n      }\n    }\n    dependency.dependencies = nameToMetadata\n  }\n\n  private async readChildPackage(name: string, nodeModulesDir: string, parent: Dependency): Promise<Dependency | null> {\n    const rawDir = path.join(nodeModulesDir, name)\n    let dir: string | null = rawDir\n    const stat = await lstat(dir)\n    const isSymbolicLink = stat.isSymbolicLink()\n    if (isSymbolicLink) {\n      dir = await orNullIfFileNotExist(realpath(dir))\n      if (dir == null) {\n        log.debug({path: rawDir}, \"broken symlink\")\n        return null\n      }\n    }\n\n    const processed = this.pathToMetadata.get(dir)\n    if (processed != null) {\n      return processed\n    }\n\n    const metadata: Dependency = await orNullIfFileNotExist(readJson(path.join(dir, \"package.json\")))\n    if (metadata == null) {\n      return null\n    }\n\n    if (isSymbolicLink) {\n      metadata.link = dir\n      metadata.stat = stat\n    }\n    else {\n      metadata.parent = parent\n\n      // overwrite if already set by project package.json\n      metadata.link = undefined\n    }\n\n    metadata.path = rawDir\n\n    // do not add root project to result\n    this.pathToMetadata.set(dir, metadata)\n\n    await this.readInstalled(dir + path.sep + \"node_modules\", metadata, name)\n    return metadata\n  }\n\n  private unmark(deps: Iterable<string>, obj: Dependency, unsetOptional: boolean, isOptional: boolean) {\n    for (const name of deps) {\n      const dep = this.findDep(obj, name, isOptional)\n      if (dep != null) {\n        if (unsetOptional) {\n          dep.optional = false\n        }\n        if (dep.extraneous) {\n          this.unmarkExtraneous(dep)\n        }\n      }\n    }\n  }\n\n  private unmarkExtraneous(obj: Dependency) {\n    // Mark all non-required deps as extraneous.\n    // start from the root object and mark as non-extraneous all modules\n    // that haven't been previously flagged as extraneous then propagate to all their dependencies\n\n    obj.extraneous = false\n\n    if (obj.directDependencyNames != null) {\n      this.unmark(obj.directDependencyNames, obj, true, false)\n    }\n\n    if (obj.peerDependencies != null) {\n      this.unmark(Object.keys(obj.peerDependencies), obj, true, false)\n    }\n\n    if (obj.optionalDependencies != null) {\n      this.unmark(Object.keys(obj.optionalDependencies), obj, false, true)\n    }\n  }\n\n  // find the one that will actually be loaded by require() so we can make sure it's valid\n  private findDep(obj: Dependency, name: string, isOptional: boolean) {\n    if (isIgnoredDep(name)) {\n      return null\n    }\n\n    let r: Dependency | null | undefined = obj\n    let found = null\n    while (r != null && found == null) {\n      // if r is a valid choice, then use that.\n      // kinda weird if a pkg depends on itself, but after the first iteration of this loop, it indicates a dep cycle.\n      found = r.dependencies == null ? null : r.dependencies.get(name)\n      if (found == null && r.realName === name) {\n        found = r\n      }\n      r = r.link == null ? r.parent : null\n    }\n\n    if (found == null) {\n      this.unresolved.set(name, isOptional)\n    }\n    return found\n  }\n}\n\nfunction isIgnoredDep(name: string) {\n  return knownAlwaysIgnoredDevDeps.has(name) || name.startsWith(\"@types/\")\n}\n\nasync function readNodeModulesDir(dir: string): Promise<Array<string> | null> {\n  let files: Array<string>\n  try {\n    files = (await readdir(dir)).filter(it => !it.startsWith(\".\") && !knownAlwaysIgnoredDevDeps.has(it))\n  }\n  catch (e) {\n    // error indicates that nothing is installed here\n    return null\n  }\n\n  files.sort()\n\n  const scopes = files.filter(it => it.startsWith(\"@\"))\n  if (scopes.length === 0) {\n    return files\n  }\n\n  const result = files.filter(it => !it.startsWith(\"@\"))\n  const scopeFileList = await BluebirdPromise.map(scopes, it => readdir(path.join(dir, it)))\n  for (let i = 0; i < scopes.length; i++) {\n    const list = scopeFileList[i]\n    list.sort()\n    for (const file of list) {\n      if (!file.startsWith(\".\")) {\n        result.push(`${scopes[i]}/${file}`)\n      }\n    }\n  }\n\n  return result\n}\n"]}
